; -!- emf -!-

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Change the home directory on Windows and DOS.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
!if &or &seq $platform "dos" &seq $platform "win32"
    set-variable $home "c:/Users/Jeremy"
!endif

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Additional file hooks
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

add-file-hook ".go" fhook-go

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Helper Methods
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Align all subsequent lines containing #l0 to column #l1
define-macro align-char
    set-variable .TheChar   #p0
    set-variable .TheColumn #p1

*nextline
    forward-line

    !if &or &xsequal @wl "^[ \t]*$" &xsequal @wl "^[ \t]*//.*$"
        !goto nextline
    !endif

    !if &not &xsequal @wl &cat &cat ".*" .TheChar ".*"
        !goto finish
    !endif

    beginning-of-line
    !while &not &sin @wc .TheChar
        forward-char
    !done

    !if &equal .TheColumn $window-acol
        !goto nextline
    !endif

    !if &less $window-acol .TheColumn
        !while &less $window-acol .TheColumn
            insert-space
        !done
        !goto nextline
    !endif

    !if &great $window-acol .TheColumn
        !while &great $window-acol .TheColumn
            backward-char
            !if &not &seq @wc " "
                !bell
                !abort
            !endif
            1 forward-delete-char
        !done
        !goto nextline
    !endif

*finish
    ml-write "Finished"
    !return
!emacro

; Align all subsequent lines containing the character under the cursor to the
; cursors position
define-macro align-current-char
    set-variable #l0 @wc
    set-variable #l1 $window-acol

    align-char
!emacro

; Macro to delete the whitespace, or if on a word all of the word until the
; next word is reached.
0 define-macro super-delete
    set-variable #l0 0
    !while &not &sin @wc " \t\n"
        forward-char
        set-variable #l0 &add #l0 1
    !done
    !repeat
        !force forward-char
        !if $status
            set-variable #l0 &add #l0 1
        !endif
    !until &or &seq @wc "" &not &sin @wc " \t\n"
    #l0 backward-delete-char
    !return
!emacro

; Macro to backspace the whitespace, or if on a word all of the word until the
; previous word is reached.
0 define-macro super-backspace
    set-variable #l0 -1
    set-variable #l1 0
    !repeat
        !force backward-char
        !if $status
            set-variable #l0 &add #l0 1
            !if &sin @wc " \t\n"
                set-variable #l1 1
            !endif
        !else
            set-variable #l1 1
        !endif
    !until #l1
    !repeat
        !force backward-char
        !if $status
            set-variable #l0 &add #l0 1
        !else
            &add #l0 1 forward-delete-char
            !return
        !endif
    !until &not &sin @wc " \t\n"
    forward-char
    #l0 forward-delete-char
    !return
!emacro

define-macro spotless
    -1 clean
!emacro

define-macro autocomplete-word
    ; remember position
    set-alpha-mark "t"
    set-mark
    backward-word
    exchange-point-and-mark
    copy-region
    ; copy clip to variable
    set-variable #l0 @y
    ; how many letters ?
    set-variable #l1 &len #l0
    ; empty clipboard
    -1 yank
    backward-word
    ; search clip and extract rest of the word
    search-backward #l0
    #l1 forward-char
    set-mark
    forward-word
    exchange-point-and-mark
    copy-region
    goto-alpha-mark "t"
    yank
    -1 yank
!emacro

; Go to the first non-blank character on the current line. If already there,
; go to column 1
define-macro smart-home
    set-variable #l1 $window-acol
    
    beginning-of-line
    
    !repeat
        !force forward-char
        !if $status
            !if &not &sin @wc " \t"
                set-variable #l0 1
            !endif
        !else
            set-variable #l0 1
        !endif
    !until #l0
    
    !if &equal $window-acol #l1
        beginning-of-line
    !end
!emacro

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Task Timer
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; #l0 should contain the value to convert to seconds. #l0 will contain the
; result
define-macro time-to-seconds
    set-variable #p0 &add &mid #p0 16 2 &mul 60 &add &mid #p0 14 2 &mul 60 &mid #p0 12 2
!emacro

; #l0 and #l1 should contain the start -> end time. #l0 will have the human
; time difference.
define-macro human-time-diff
    set-variable #l0 &sub #p1 #p0 ; difference in seconds
    set-variable #l1 0            ; day count
    set-variable #l2 0            ; hour count
    set-variable #l3 0            ; minute count
    set-variable #l4 0            ; second count

    !if &great #l0 86400
        set-variable #l1 &div #l0 86000
        set-variable #l0 &sub #l0 &mul 86000 #l1
    !endif
    !if &great #l0 3600
        set-variable #l2 &div #l0 3600
        set-variable #l0 &sub #l0 &mul 3600 #l2
    !endif
    !if &great #l0 60
        set-variable #l3 &div #l0 60
        set-variable #l0 &sub #l0 &mul 60 #l3
    !endif
    set-variable #l4 #l0

    !if &great #l1 0
        set-variable #p0 &spr "%d day %d hour %d min %d sec" #l1 #l2 #l3 #l4
    !elif &great #l2 0
        set-variable #p0 &spr "%d hour %d min %d sec" #l2 #l3 #l4
    !elif &great #l3 0
        set-variable #p0 &spr "%d min %d sec" #l3 #l4
    !else
        set-variable #p0 &spr "%d sec" #l4
    !endif
!emacro

define-macro timer-begin
    set-variable $timer-started-at $time
!emacro

define-macro timer-status
    set-variable #l0 $time
    time-to-seconds
    set-variable #l1 #l0

    set-variable #l0 $timer-started-at
    time-to-seconds

    human-time-diff

    ml-write &spr "Elapsed time: %s" #l0
!emacro

global-bind-key    alarm             "C-c a"
global-bind-key    timer-begin       "C-c b"
global-bind-key    timer-status      "C-c s"
global-bind-key    super-backspace   "C-backspace"
global-bind-key    super-delete      "C-delete"
-1 global-bind-key next-buffer       "A-left"
global-bind-key    next-buffer       "A-right"
global-bind-key    autocomplete-word "C-."
global-bind-key    smart-home        "home"
